#!/usr/bin/python
"""
Referencing current branch in github readme.md[1]
This pre-commit hook[2] updates the README.md file's
Travis badge with the current branch
[1] http://stackoverflow.com/questions/18673694/referencing-current-branch-in-github-readme-md
[2] http://www.git-scm.com/book/en/v2/Customizing-Git-Git-Hooks
[3] https://docs.travis-ci.com/user/status-images/
"""
import subprocess

# Hard-Coded for your repo (ToDo: get from remote?)
GITHUB_USER="piontec"
REPO="docker-enforcer"

print "Starting badge pre-commit hook..."

BRANCH=subprocess.check_output(["git",
                                "rev-parse",
                                "--abbrev-ref",
                                "HEAD"]).strip()

FILE="readme.md"

# String with hard-coded values
# See Embedding Status Images[3] for alternate formats (private repos, svg, etc)

#  [![Build Status](https://travis-ci.org/
#  joegattnet/joegattnet_v3.png?
#  branch=staging)][travis]

# Output String with Variable substitution
travis="[![Build Status](https://travis-ci.org/" \
       "{GITHUB_USER}/{REPO}.png?" \
       "branch={BRANCH})](https://travis-ci.org/{GITHUB_USER}/{REPO})\n"
           .format(BRANCH=BRANCH, GITHUB_USER=GITHUB_USER, REPO=REPO)
coverall="[![Coverage Status](https://coveralls.io/repos/github/" \
         "{GITHUB_USER}/{REPO}/badge.svg?branch={BRANCH})](https://coveralls.io/github/{GITHUB_USER}/{REPO}?branch={BRANCH})\n"
             .format(BRANCH=BRANCH, GITHUB_USER=GITHUB_USER, REPO=REPO)



travis_sentinal_str="[![Build Status]"
coverall_sentinal_str="[![Coverage Status]"

readmelines=open(FILE).readlines()
with open(FILE, "w") as fh:
    for aline in readmelines:
        if travis_sentinal_str in aline and travis != aline:
            print "Replacing:\n\t{}\nwith:\n\t{}".format(aline, travis)
            fh.write(travis)
        elif coverall_sentinal_str in aline and coverall != aline:
            print "Replacing:\n\t{}\nwith:\n\t{}".format(aline, coverall)
            fh.write(coverall)
        else:
            fh.write(aline)

subprocess.check_output(["git", "add", "README.md" ])

print "badge pre-commit hook complete."
